package com.pluralsight.controller;

import java.util.ArrayList;
import java.util.List;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpSession;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.validation.BindingResult;
import org.springframework.web.bind.annotation.ModelAttribute;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.ResponseBody;
import org.springframework.web.bind.annotation.SessionAttributes;

import com.pluralsight.model.Airport;
import com.pluralsight.model.FlightSearch;
import com.pluralsight.model.FlightsReport;
import com.pluralsight.model.LogInDetails;
import com.pluralsight.model.SeatType;
import com.pluralsight.model.User;
import com.pluralsight.service.FlightSearchService;

@Controller
@SessionAttributes({"seats", "flightSelected", "logInForm", "userForm"})
public class FlightBookingController {
	
	@Autowired
	private FlightSearchService flightSearchService;
	
	@RequestMapping(value="flightpage", method=RequestMethod.GET)
	public String getFlights(@ModelAttribute("flightSelected") FlightsReport flightSelected, @ModelAttribute ("flightSearch") FlightSearch flightSearch, Model model) {
		
		System.out.println("flightpage - get");
		List<SeatType> seatTypes = flightSearchService.findAll();
		for (SeatType seatType : seatTypes) {
			System.out.println(seatType.getDescription());
		}
		model.addAttribute("seats",seatTypes);
		
		return "flightpage";
	}
	
	@ModelAttribute("logInForm")
	public LogInDetails getLogin() {
		System.out.println("loginform invoked flightbooking");
		return new LogInDetails();
	}
	
	@ModelAttribute("userForm")
	public User getUser() {
		System.out.println("userform invoked flightbooking");
		return new User();
	}
	
	@ModelAttribute("flightSelected")
	public FlightsReport getFlightSelected() {
		System.out.println("flightselected invoked flightbooking");
		return new FlightsReport();
	}
	
//	@ModelAttribute("seats")
//	public List<SeatType> getSeats() {
//		System.out.println("seats invoked flightbooking");
//		List<SeatType> seatTypes = flightSearchService.findAll();
//		for (SeatType seatType : seatTypes) {
//			System.out.println(seatType.getDescription());
//		}
//		return seatTypes;
//	}
	
	@RequestMapping(value="flightpage", method=RequestMethod.POST)
	public String getFlightList(@ModelAttribute("flightSearch") FlightSearch flightSearch, Model model, BindingResult result, HttpSession session) {
		
		System.out.println("flightpage - post");
		
		System.out.println("source: " + flightSearch.getSource_airport());
		System.out.println("destination: " + flightSearch.getDestination_airport());
		System.out.println("date: " + flightSearch.getFlight_date());
		System.out.println("seats: " + flightSearch.getSeats());
		System.out.println("class: " + flightSearch.getSeat_class());
		List<FlightsReport> flightlist = flightSearchService.findAllFlights(flightSearch);
		
		
		if(result.hasErrors()) {
			return "flightpage";
		}
		
//		FlightsReport flightSelected = (FlightsReport)session.getAttribute("flightSelected");
//		if(flightSelected == null) {
//			flightSelected = new FlightsReport();
//		}
		
		model.addAttribute("flightsReport", flightlist);
		
		return "flightpage";
		
	}
	
//	@RequestMapping(value = "/seat_classes", method = RequestMethod.GET)
//	public @ResponseBody List<SeatType> findAllFlightClasses() {
//		return flightSearchService.findAll();
//	}
	
	@RequestMapping(value = "/flightAjax", method = RequestMethod.GET)
	public @ResponseBody List<Airport> getFlightAjaxList(@RequestParam("term") String query) {
		List<Airport> matched = flightSearchService.getFlightAjaxList(query);
		
		List<Airport> matched1 = new ArrayList<>();
		for (Airport airport : matched) {
			Airport temp = new Airport();
			temp.setAirport_id(airport.getAirport_id());
			temp.setAirport_name(airport.getAirport_name());
			System.out.println(airport.getAirport_name());
			matched1.add(temp);
		}
		
		return matched1;
		
	}
}
